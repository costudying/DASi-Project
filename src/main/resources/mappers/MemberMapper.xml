<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.project.dasi.auth.dao.UserMapper">


    <resultMap id="MemberResultMap" type="com.project.dasi.auth.dto.UserDTO">
        <id property="userCode" column="USER_CODE"/>
        <result property="userId" column="USER_ID"/>
        <result property="password" column="PASSWORD"/>
        <result property="name" column="USER_NAME"/>
        <result property="birthDate" column="BIRTH_DATE"/>
        <result property="email" column="EMAIL"/>
        <result property="tel" column="TEL"/>
        <result property="gender" column="GENDER"/>
        <result property="joinDate" column="JOIN_DATE"/>
        <result property="zipcode" column="ZIP_CODE"/>
        <result property="address" column="ADDRESS"/>
        <result property="addressDetail" column="ADDRESS_DETAIL"/>
        <result property="authName" column="AUTH_NAME"/>
    </resultMap>

    <sql id="default">
        select * from users
    </sql>


    <select id="getMemberList" resultMap="MemberResultMap">
        <include refid="default"></include> limit 0, 10
    </select>

    <insert id="registMember" parameterType="com.project.dasi.auth.dao.UserMapper">
        INSERT INTO USERS (USER_ID, PASSWORD, USER_NAME, BIRTH_DATE,
        EMAIL, TEL, GENDER, ZIP_CODE, ADDRESS, ADDRESS_DETAIL)
        VALUES (#{ userId }, #{ password }, #{ name }, #{ birthDate },
        #{ email }, #{ tel }, #{ gender }, #{ zipCode }, #{ address }, #{ addressDetail }
        )
    </insert>

    <update id="modifyMember" parameterType="com.project.dasi.auth.dto.UserDTO">
        UPDATE USERS SET PASSWORD = #{password} WHERE USER_CODE = #{userCode}
    </update>

    <delete id="deleteMember" parameterType="hashMap">
        DELETE FROM USERS WHERE USER_CODE = #{userCode} AND PASSWORD = #{password}
    </delete>

    <select id="searchMember" resultType="com.project.dasi.auth.dto.UserDTO" resultMap="MemberResultMap">
        SELECT USER_CODE, USER_ID, USER_NAME, BIRTH_DATE, EMAIL, TEL, GENDER,
        JOIN_DATE FROM USERS

        <if test="keyword == ''">
        </if>

        <if test="keyword == 'userCode'">
            WHERE USER_CODE LIKE CONCAT('%',#{search},'%')
        </if>
        <if test="keyword == 'userId'">
            WHERE USER_ID LIKE CONCAT('%',#{search},'%')
        </if>
        <if test="keyword == 'name'">
            WHERE USER_NAME LIKE CONCAT('%',#{search},'%')
        </if>
        <if test="keyword == 'birthDate'">
            WHERE BIRTH_DATE LIKE CONCAT('%',#{search},'%')
        </if>
        <if test="keyword == 'email'">
            WHERE EMAIL LIKE CONCAT('%',#{search},'%')
        </if>
        <if test="keyword == 'tel'">
            WHERE TEL LIKE CONCAT('%',#{search},'%')
        </if>
        <if test="keyword == 'gender'">
            WHERE GENDER LIKE CONCAT('%',#{search},'%')
        </if>
        <if test="keyword == 'marketingStatus'">
            WHERE MARKETING_STATUS LIKE CONCAT('%',#{search},'%')
        </if>
        <if test="keyword == 'joinDate'">
            WHERE JOIN_DATE LIKE CONCAT('%',#{search},'%')
        </if>
    </select>

    <select id="findUserByUserId" resultMap="MemberResultMap">
        SELECT USER_ID, PASSWORD, USER_NAME, BIRTH_DATE,
        EMAIL, TEL, GENDER
        FROM USERS
        WHERE USER_ID = #{ userId }
    </select>

    <select id="idCheck" parameterType="String" resultType="int">
        SELECT COUNT(USER_ID) FROM USERS WHERE USER_ID= #{userId}
    </select>

</mapper>